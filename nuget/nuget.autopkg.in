configurations {
	UserPlatformToolset {
		// Needed because autopackage lacks VS2015+ support
		key = "PlatformToolset";
		choices: "v140,v141,v142";
	};

	RuntimeLibrary {
		key = "RuntimeLibrary"; // This is the key you can find in .vcxproj file
		choices: "MultiThreaded,MultiThreadedDebug,MultiThreadedDLL,MultiThreadedDebugDLL"; // these choices must be valid values for .vcxproj file
	};
}

nuget{
	nuspec{
		id = libmorda;
		version : $(version);
		title: C++ GUI library;
		authors: {Ivan Gagis};
		owners: {Ivan Gagis};
		licenseUrl: "https://raw.githubusercontent.com/cppfw/morda/master/LICENSE";
		projectUrl: "https://github.com/cppfw/morda";
		iconUrl: "https://github.com/cppfw/morda/blob/master/logo.svg";
		requireLicenseAcceptance:false;
		summary: C++ GUI library;

		description: @"C++ GUI library";
		releaseNotes: "Initial release";
		copyright: Copyright 2019 Ivan Gagis;
		tags: { native};
	}
	dependencies {
		packages : {
			libr4/1.0.51;
			freetype_static/2.10.1.7;
			libjpeg_static/6.1.1.9;
			libpapki/1.0.91;
			libpng_static/1.4.1.25;
			libpuu/0.1.25;
			libutki/1.1.112;
			zlib_static/1.2.11.7;
			libsvgdom/0.3.56;
			libsvgren/0.5.7;
		};
	}
	files {
		//this is needed to put headers in the base folder
		nestedInclude: {
			#destination = ${d_include}morda;
			"..\src\morda\**\*.hpp"
		};

		res += {
 			#add-each-file : ::nuget.targets.[${condition}].CopyToOutput;
 			#destination : ${d_bin}\morda_res;
		};

		// ====== v140 ======
/*
		[x86,v140,release] {
			lib: ..\msvs_solution\v140_Release\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}

		[x86,v140,debug] {
			lib: ..\msvs_solution\v140_Debug\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}

		[x64,v140,release] {
			lib: ..\msvs_solution\x64\v140_Release\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}

		[x64,v140,debug] {
			lib: ..\msvs_solution\x64\v140_Debug\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}
*/

		// ====== v141 ======
/*
		[x86,v141,release] {
			lib: ..\msvs_solution\v141_Release\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}

		[x86,v141,debug] {
			lib: ..\msvs_solution\v141_Debug\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}

		[x64,v141,release] {
			lib: ..\msvs_solution\x64\v141_Release\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}

		[x64,v141,debug] {
			lib: ..\msvs_solution\x64\v141_Debug\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}
*/
		// ====== v142 ======

		/*
		[x86,v142,release,MultiThreaded] {
			lib: ..\msvs_solution\v142_Release_MT\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}
		[x86,v142,debug,MultiThreadedDebug] {
			lib: ..\msvs_solution\v142_Debug_MT\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}
		[x64,v142,release,MultiThreaded] {
			lib: ..\msvs_solution\x64\v142_Release_MT\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}
		[x64,v142,debug,MultiThreadedDebug] {
			lib: ..\msvs_solution\x64\v142_Debug_MT\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}
		*/
		
		[x86,v142,release,MultiThreadedDLL] {
			lib: ..\msvs_solution\v142_Release_MD\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}
		[x86,v142,debug,MultiThreadedDebugDLL] {
			lib: ..\msvs_solution\v142_Debug_MD\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}
		[x64,v142,release,MultiThreadedDLL] {
			lib: ..\msvs_solution\x64\v142_Release_MD\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}
		[x64,v142,debug,MultiThreadedDebugDLL] {
			lib: ..\msvs_solution\x64\v142_Debug_MD\libmorda.lib;
			res: ..\res\morda_res\**\*;
		}
	}
}
